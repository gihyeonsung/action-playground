name: PR Command

on:
  issue_comment:
    types: [created]

jobs:
  label:
    runs-on: ubuntu-latest
    if: github.event.issue.pull_request
    steps:
      - uses: actions/checkout@v5

      - name: Label PR
        uses: actions/github-script@v6
        with:
          script: |
            const command = context.payload.comment.body.trim();
            if (!command.startsWith('/label')) {
              return;
            }

            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.issue.number,
              labels: [command.split(' ')[1]]
            });

  approve:
    runs-on: ubuntu-latest
    if: github.event.issue.pull_request
    steps:
      - uses: actions/checkout@v5

      - uses: actions/github-script@v6
        with:
          script: |
            const command = context.payload.comment.body.trim();
            if (!command.startsWith('/approve')) {
              return;
            }

            await github.rest.pulls.createReview({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.issue.number,
              event: 'APPROVE'
            });

  reject:
    runs-on: ubuntu-latest
    if: github.event.issue.pull_request
    steps:
      - uses: actions/checkout@v5

      - uses: actions/github-script@v6
        with:
          script: |
            const command = context.payload.comment.body.trim();
            if (!command.startsWith('/reject')) {
              return;
            }

            await github.rest.issues.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.issue.number,
              state: 'closed'
            });

  assign:
    runs-on: ubuntu-latest
    if: github.event.issue.pull_request
    steps:
      - uses: actions/checkout@v5

      - uses: actions/github-script@v6
        with:
          script: |
            const command = context.payload.comment.body.trim();
            if (!command.startsWith('/assign')) {
              return;
            }

            await github.rest.issues.addAssignees({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.issue.number,
              assignees: [command.split(' ')[1]]
            });
